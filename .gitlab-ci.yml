include:
  - project: 'sysadm-docker/ubuntu-sshclient'
    ref:     'master'
    file:    'gitlab-ci-template.yml'

stages:
  - build
  - deploy
  - linking
  - code-analysis
  - build-demo-2019
  - build-demo-2020
  - build-demo-2021

variables:
  BUILD_SCRIPT_PATH: "./cicd/build-universal.sh"
  PROJECT_PATH: "."
  BUILD_ROOT_PATH: "Builds"
  BUILD_TARGET_WINDOWS: "StandaloneWindows64"
  BUILD_TARGET_WEBGL: "WebGL"
  BUILD_TARGET_ANDROID: "Android"
  UNITY_2019_VERSION: "2019.4.27f1"
  UNITY_2020_VERSION: "2020.3.14f1"
  UNITY_2021_VERSION: "2021.1.13f1"
  BUILD_PLATFORM: "docker"
  BUILD_IMAGE: "unityci/editor"
  WINDOWS_IMAGE_VERSION: "windows-mono-0.14.0"
  WEBGL_IMAGE_VERSION: "webgl-0.14.0"
  ANDROID_IMAGE_VERSION: "android-0.14.0"

build doc:
  stage: build
  only:
    - /^v.*/
  image: alpine
  script:
  - apk update && apk add doxygen graphviz ttf-freefont zip
  - doxygen Documentation/Autogen/Doxyfile
  - mv Documentation/Autogen/html/ docs/
  - cd docs/ && zip -r ../build.zip *
  artifacts:
    paths:
    - build.zip

deploy doc:
  stage: deploy
  extends:      .deploy doc
  only:
    - /^v.*/
  dependencies:
    - build doc
  environment:
    name: doc/$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.doc.srv.local/$URL_SLUG
    on_stop: stop doc
  when: manual

current doc:
  extends:      .current doc
  only:
    - /^v.*/
  dependencies:
    - deploy doc
  environment:
    name: doc/current
    url: https://developers.xsolla.com/sdk-code-references/unity-store

stop doc:
  extends:      .stop doc
  environment:
    name: doc/$CI_COMMIT_REF_SLUG
    action: stop
  only:
    - /^v.*/
  dependencies: []

analyze-code:
  stage: code-analysis
  image: unityci/editor:2019.4.27f1-webgl-0.13.0
  allow_failure: true
  script:
    - chmod +x ./cicd/code-analysis.sh && ./cicd/code-analysis.sh
  after_script:
    - mkdir -p code-analysis/logs/
    - mv Logs/* code-analysis/logs/
  artifacts:
    when: on_failure
    paths:
      - code-analysis

# =================================================================================================================
# UNITY 2019

build-windows-2019:
  stage: build-demo-2019
  image: $BUILD_IMAGE:$UNITY_2019_VERSION-$WINDOWS_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2019_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_WINDOWS" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

build-webgl-2019:
  stage: build-demo-2019
  image: $BUILD_IMAGE:$UNITY_2019_VERSION-$WEBGL_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2019_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_WEBGL" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

build-android-2019:
  stage: build-demo-2019
  image: $BUILD_IMAGE:$UNITY_2019_VERSION-$ANDROID_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2019_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_ANDROID" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

# =================================================================================================================
# UNITY 2020

build-windows-2020:
  stage: build-demo-2020
  image: $BUILD_IMAGE:$UNITY_2020_VERSION-$WINDOWS_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2020_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_WINDOWS" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

build-webgl-2020:
  stage: build-demo-2020
  image: $BUILD_IMAGE:$UNITY_2020_VERSION-$WEBGL_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2020_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_WEBGL" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

build-android-2020:
  stage: build-demo-2020
  image: $BUILD_IMAGE:$UNITY_2020_VERSION-$ANDROID_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2020_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_ANDROID" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

# =================================================================================================================
# UNITY 2021

build-windows-2021:
  stage: build-demo-2021
  image: $BUILD_IMAGE:$UNITY_2021_VERSION-$WINDOWS_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2021_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_WINDOWS" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

build-webgl-2021:
  stage: build-demo-2021
  image: $BUILD_IMAGE:$UNITY_2021_VERSION-$WEBGL_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2021_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_WEBGL" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public

build-android-2021:
  stage: build-demo-2021
  image: $BUILD_IMAGE:$UNITY_2021_VERSION-$ANDROID_IMAGE_VERSION
  script:
    - chmod +x "$BUILD_SCRIPT_PATH" && "$BUILD_SCRIPT_PATH" "$PROJECT_PATH" "$UNITY_2021_VERSION" "$BUILD_ROOT_PATH" "$BUILD_TARGET_ANDROID" "$BUILD_PLATFORM"
  after_script:
    - mkdir -p public
    - mv Builds/* public/
  artifacts:
    when: always
    paths:
      - public